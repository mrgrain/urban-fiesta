name: action
on:
  workflow_dispatch: {}
  push:
    branches:
      - "main"
jobs:
  do_stuff:
    name: "Upload to S3"
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    environment: releasing
    steps:
      - run: |-
          mkdir -p dist
          echo "1.0.0" > dist/version.txt
          touch dist/docs.zip
          echo "1.0.0" > dist/docs.zip
      - name: Authenticate Via OIDC Role
        id: creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: ${{ vars.AWS_ROLE_TO_ASSUME_FOR_ACCOUNT }}
          role-session-name: mrgrain@urban-fiesta
          mask-aws-account-id: true
      - name: Assume the publishing role
        id: publishing-creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: ${{ vars.PUBLISH_ROLE_ARN }}
          role-session-name: mrgrain@urban-fiesta
          mask-aws-account-id: true
          role-chaining: true
      - name: Publish docs
        env:
          BUCKET_NAME: ${{ vars.DOCS_BUCKET_NAME }}
          DOCS_STREAM: toolkit-lib
        run: |-
          echo ::add-mask::$BUCKET_NAME
          S3_PATH="$DOCS_STREAM/aws-cdk-toolkit-lib-v$(cat dist/version.txt).zip"
          S3_URI="s3://$BUCKET_NAME/$S3_PATH"
          LATEST="latest-toolkit-lib"
          echo "$S3_PATH" > "$LATEST"

          # Check if file exists using head-object
          aws s3api head-object --bucket "$BUCKET_NAME" --key "$S3_PATH" &>/dev/null
          aws s3api head-object --bucket "$BUCKET_NAME" --key "$S3_PATH" &>/dev/null || HEAD_RESULT=$?

          if [[ $HEAD_RESULT -eq 0 ]]; then
            echo "Docs artifact already published, skipping upload"
          elif [[ $HEAD_RESULT -eq 254 ]]; then
            # Error code 254 specifically indicates a 404 (not found)
            # Proceed with upload since file doesn't exist
            aws s3 cp dist/docs.zip "$S3_URI" && \
            aws s3 cp "$LATEST" "s3://$BUCKET_NAME/$LATEST"
          else
            # Any other error (like permissions, network issues, etc)
            echo "Error: Failed to check if file exists. Check permissions and connectivity."
            exit 1
          fi
